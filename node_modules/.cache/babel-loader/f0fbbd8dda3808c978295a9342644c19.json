{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nimport { useWrappedRequest } from \"./useWrappedRequest\";\nexport function useTransactionsByEmployee() {\n  _s();\n\n  const {\n    fetchWithCache\n  } = useCustomFetch();\n  const {\n    loading\n  } = useWrappedRequest();\n  const [transactionsByEmployee, setTransactionsByEmployee] = useState(null);\n  const fetchById = useCallback(async employeeId => {\n    const data = await fetchWithCache(\"transactionsByEmployee\", {\n      employeeId\n    });\n    setTransactionsByEmployee(data);\n  }, [fetchWithCache]);\n  const invalidateData = useCallback(() => {\n    setTransactionsByEmployee(null);\n  }, []);\n  return {\n    data: transactionsByEmployee,\n    loading,\n    fetchById,\n    invalidateData\n  };\n}\n\n_s(useTransactionsByEmployee, \"BXOP7sCvW/FrCTq99USjjxdkD6g=\", false, function () {\n  return [useCustomFetch, useWrappedRequest];\n});","map":{"version":3,"names":["useCallback","useState","useCustomFetch","useWrappedRequest","useTransactionsByEmployee","fetchWithCache","loading","transactionsByEmployee","setTransactionsByEmployee","fetchById","employeeId","data","invalidateData"],"sources":["/home/uddhav/Downloads/ramp second try/src/hooks/useTransactionsByEmployee.ts"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { RequestByEmployeeParams, Transaction } from \"../utils/types\"\nimport { TransactionsByEmployeeResult } from \"./types\"\nimport { useCustomFetch } from \"./useCustomFetch\"\nimport { useWrappedRequest } from \"./useWrappedRequest\"\n\nexport function useTransactionsByEmployee(): TransactionsByEmployeeResult {\n  const { fetchWithCache } = useCustomFetch()\n  const { loading } = useWrappedRequest()\n  const [transactionsByEmployee, setTransactionsByEmployee] = useState<Transaction[] | null>(null)\n\n  const fetchById = useCallback(\n    async (employeeId: string)  => {\n        const data = await fetchWithCache<Transaction[], RequestByEmployeeParams>(\n          \"transactionsByEmployee\",\n          {\n            employeeId,\n          }\n        )\n\n        setTransactionsByEmployee(data)\n      },\n    [fetchWithCache]\n  )\n\n  const invalidateData = useCallback(() => {\n    setTransactionsByEmployee(null)\n  }, [])\n\n  return { data: transactionsByEmployee, loading, fetchById, invalidateData }\n}\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAGA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAEA,OAAO,SAASC,yBAAT,GAAmE;EAAA;;EACxE,MAAM;IAAEC;EAAF,IAAqBH,cAAc,EAAzC;EACA,MAAM;IAAEI;EAAF,IAAcH,iBAAiB,EAArC;EACA,MAAM,CAACI,sBAAD,EAAyBC,yBAAzB,IAAsDP,QAAQ,CAAuB,IAAvB,CAApE;EAEA,MAAMQ,SAAS,GAAGT,WAAW,CAC3B,MAAOU,UAAP,IAA+B;IAC3B,MAAMC,IAAI,GAAG,MAAMN,cAAc,CAC/B,wBAD+B,EAE/B;MACEK;IADF,CAF+B,CAAjC;IAOAF,yBAAyB,CAACG,IAAD,CAAzB;EACD,CAVwB,EAW3B,CAACN,cAAD,CAX2B,CAA7B;EAcA,MAAMO,cAAc,GAAGZ,WAAW,CAAC,MAAM;IACvCQ,yBAAyB,CAAC,IAAD,CAAzB;EACD,CAFiC,EAE/B,EAF+B,CAAlC;EAIA,OAAO;IAAEG,IAAI,EAAEJ,sBAAR;IAAgCD,OAAhC;IAAyCG,SAAzC;IAAoDG;EAApD,CAAP;AACD;;GAxBeR,yB;UACaF,c,EACPC,iB"},"metadata":{},"sourceType":"module"}